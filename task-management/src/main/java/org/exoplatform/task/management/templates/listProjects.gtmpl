#{param name=projects/}

<%
import org.exoplatform.services.security.ConversationState;
    
def displayListProjectItem(project, level) {
    def identity = ConversationState.getCurrent().getIdentity();
    def hasChild = (project.children != null && project.children.size() > 0);
    def hasChildClass = hasChild  ? 'has-child' : '';
	def indent = (level - 1) * 20; 
%>
    <li class="dropdown project-item ${project.color == '' ? 'no-color' : ''}" data-projectId="${project.id}">
        <div class="sub-item" style="padding-left: <%=indent%>px">
        <%if (project.canEdit(identity)) { %>
	        <a class="dropdown-toggle pull-right"
	           data-toggle="dropdown"
	           href="#">
	            <i class="uiIconRightMenu uiIconLightGray"></i>
	        </a>
	        <div class="dropdown-menu uiDropdownWithIcon" style="left: 100%;top: -100px;">
	        	<span class="arrowLeft" style = "top: 115px;"></span>
	        	<ul class="uiDropdownMenu project-menu" data-projectId="${project.id}">
		            <li><a href="#"><i class="uiIconEditMini uiIconLightGray"></i>Add task</a></li>
		            <li><a href="#" class="share-project"><i class="uiIconShare uiIconLightGray"></i>Share</a></li>
		            <li><a class="clone-project" data-projectId="${project.id}" href="#"><i class="uiIconCloneNode uiIconLightGray"></i>Clone</a></li>
		            <li><a class="delete-project" href="#"><i class="uiIconTrash uiIconLightGray"></i>Delete</a></li>
		            <li><a href="#"><i class="uiIconHide uiIconLightGray"></i>Hide</a></li>
		            <li><a class="new-project" data-projectId="${project.id}" href="#"><i class="uiIconAddProject uiIconLightGray"></i>Add project</a></li>
		            <li class="noColor changeProjectColor" data-color="">No Color</li>
		            <li class="calendarTableColor">
                        <%
                            def colors = [
                                ['asparagus', 'munsell_blue', 'navy_blue', 'purple', 'red', 'brown'],
                                ['laurel_green', 'sky_blue', 'blue_gray', 'light_purple', 'hot_pink', 'light_brown'],
                                ['moss_green', 'powder_blue', 'light_blue', 'pink', 'Orange', 'gray'],
                                ['green', 'baby_blue', 'light_gray', 'beige', 'yellow', 'plum']
                            ];
                        %>
                        <%
                            colors.each {c -> %>
                                <div>
                                    <%c.each {color ->%>
                                    <a class="${color} colorCell changeProjectColor" data-color="${color}" href="#" style="display: block;"><i class="${project.color == color ? "iconCheckBox" : ""}"></i></a>
                                    <%}%>
                                </div>
                            <%}
                        %>
					</li>
		        </ul>
		    </div>
		    <%}%>
	        <a href="#" class="${project.color} colorPie"><span class=""></span></a>
	        <a href="#" class="project-name" data-id="${project.id}" data-canEdit="<%=project.canEdit(identity)%>" data-canView="<%=project.canView(identity)%>">
	        		<i class="${hasChild ? "uiIconArrowDownMini uiIconLightGray" : ""}"></i>${project.name}
	        </a>
		</div>
        <% if (project.children != null && project.children.size() > 0) {
            displayListProjects(project.children, project.getId(), level);
        }%>
    </li>
<% }


def displayListProjects(projects, parentId, level) { %>
    <ul class="list-projects" parentId="${parentId}">
        <%if(projects.size() == 0) {%>
        <li class="no-project center muted">
            No project
        </li>
        <%} else {
        	level++; 
        	projects.each { project ->
            	displayListProjectItem(project, level)
        	}
        	level--;
        }
        %>
    </ul>
<%}%>

<%
    displayListProjects(projects, 0, 0)
%>